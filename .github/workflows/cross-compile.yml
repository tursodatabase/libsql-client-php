name: Cross Deploy

on:
  push:
    tags:
      - turso-php-extension/v*.*.*

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build and upload
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          # Linux x64
          - build: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            php-versions: '8.3'

          # MacOS x64
          - build: x86_64-apple-darwin
            os: macos-latest
            target: x86_64-apple-darwin
            php-versions: '8.3'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        working-directory: ./turso-php-extension

      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.target }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: composer

      - name: Export PHP Path
        run: |
          echo "PHP=$(which php)" >> $GITHUB_ENV
          echo "PHP_CONFIG=$(which php)" >> $GITHUB_ENV

      - name: Build
        run: |
          export PATH="$(which php):$PATH"
          cd turso-php-extension
          cargo build --verbose --release --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          cd turso-php-extension
          # Replace with the name of your binary
          binary_name="libsql_php"

          dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
          mkdir "$dirname"
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
              mv "target/${{ matrix.target }}/release/lib$binary_name.dylib" "$dirname" && mv "libsql_php_extension.stubs.php" "$dirname"
          else
              mv "target/${{ matrix.target }}/release/lib$binary_name.so" "$dirname" && mv "libsql_php_extension.stubs.php" "$dirname"
          fi

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET }}
